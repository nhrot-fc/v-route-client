{
  "openapi": "3.0.1",
  "info": {
    "title": "PLG System Management API",
    "description": "API para la gestión del sistema PLG (Propane Liquid Gas). Incluye gestión de vehículos, mantenimientos, bloqueos, incidentes y órdenes.",
    "termsOfService": "https://www.example.com/terms",
    "contact": {
      "name": "PLG System Team",
      "url": "https://www.example.com",
      "email": "plgsystem@example.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://choosealicense.com/licenses/mit/"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://ec2-54-208-138-5.compute-1.amazonaws.com:8082",
      "description": "Server URL in Development environment"
    }
  ],
  "tags": [
    {
      "name": "Depots",
      "description": "Gestión de depósitos de GLP del sistema PLG"
    },
    {
      "name": "Dashboard",
      "description": "Panel de control y estadísticas del sistema PLG"
    },
    {
      "name": "Maintenance",
      "description": "Gestión de mantenimientos del sistema PLG"
    },
    {
      "name": "Orders",
      "description": "Gestión de órdenes de entrega del sistema PLG"
    },
    {
      "name": "Incidents",
      "description": "Gestión de incidentes del sistema PLG"
    },
    {
      "name": "Blockages",
      "description": "Gestión de bloqueos de rutas del sistema PLG"
    },
    {
      "name": "Vehicles",
      "description": "Gestión de vehículos del sistema PLG"
    }
  ],
  "paths": {
    "/api/vehicles/{id}/status": {
      "put": {
        "tags": ["Vehicles"],
        "summary": "Actualizar estado del vehículo",
        "description": "Actualiza el estado operacional del vehículo",
        "operationId": "updateVehicleStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del vehículo",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Nuevo estado del vehículo",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AVAILABLE", "IN_TRANSIT", "MAINTENANCE", "BROKEN_DOWN"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Estado actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Vehicle" }
              }
            }
          },
          "404": {
            "description": "Vehículo no encontrado",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Vehicle" } }
            }
          }
        }
      }
    },
    "/api/vehicles/{id}/position": {
      "put": {
        "tags": ["Vehicles"],
        "summary": "Actualizar posición del vehículo",
        "description": "Actualiza la posición actual del vehículo",
        "operationId": "updateVehiclePosition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del vehículo",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Position" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Posición actualizada exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Vehicle" }
              }
            }
          },
          "404": {
            "description": "Vehículo no encontrado",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Vehicle" } }
            }
          }
        }
      }
    },
    "/api/vehicles/{id}/glp": {
      "put": {
        "tags": ["Vehicles"],
        "summary": "Actualizar nivel de GLP",
        "description": "Actualiza el nivel de GLP del vehículo (cantidad a agregar/quitar)",
        "operationId": "updateGLPLevel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del vehículo",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Cantidad de GLP a agregar (positivo) o quitar (negativo)",
            "required": true,
            "schema": { "type": "number", "format": "double" }
          }
        ],
        "responses": {
          "200": {
            "description": "Nivel de GLP actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Vehicle" }
              }
            }
          },
          "404": {
            "description": "Vehículo no encontrado",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Vehicle" } }
            }
          }
        }
      }
    },
    "/api/orders/{id}/deliver": {
      "put": {
        "tags": ["Orders"],
        "summary": "Registrar entrega",
        "description": "Registra la entrega de una cantidad específica de GLP para una orden",
        "operationId": "recordDelivery",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la orden",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Volumen entregado",
            "required": true,
            "schema": { "type": "number", "format": "double" }
          }
        ],
        "responses": {
          "404": {
            "description": "Orden no encontrada",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Order" } }
            }
          },
          "200": {
            "description": "Entrega registrada exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Order" }
              }
            }
          },
          "400": {
            "description": "Cantidad de entrega inválida",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Order" } }
            }
          }
        }
      }
    },
    "/api/maintenance/{id}/complete": {
      "put": {
        "tags": ["Maintenance"],
        "summary": "Completar mantenimiento",
        "description": "Marca un mantenimiento como completado",
        "operationId": "completeMaintenance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del mantenimiento",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "Mantenimiento completado exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Maintenance" }
              }
            }
          },
          "404": {
            "description": "Mantenimiento no encontrado",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/Maintenance" }
              }
            }
          }
        }
      }
    },
    "/api/depots/{id}/threshold": {
      "put": {
        "tags": ["Depots"],
        "summary": "Actualizar umbral mínimo",
        "description": "Actualiza el umbral mínimo de GLP para un depósito",
        "operationId": "updateMinimumThreshold",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del depósito",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "threshold",
            "in": "query",
            "description": "Nuevo umbral mínimo",
            "required": true,
            "schema": { "type": "number", "format": "double" }
          }
        ],
        "responses": {
          "404": {
            "description": "Depósito no encontrado",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Depot" } }
            }
          },
          "200": {
            "description": "Umbral actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Depot" }
              }
            }
          }
        }
      }
    },
    "/api/depots/{id}/serve": {
      "put": {
        "tags": ["Depots"],
        "summary": "Servir GLP desde depósito",
        "description": "Retira una cantidad específica de GLP del depósito",
        "operationId": "serveFromDepot",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del depósito",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "requestedGLP",
            "in": "query",
            "description": "Cantidad de GLP solicitada",
            "required": true,
            "schema": { "type": "number", "format": "double" }
          }
        ],
        "responses": {
          "404": {
            "description": "Depósito no encontrado",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Depot" } }
            }
          },
          "200": {
            "description": "GLP servido exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Depot" }
              }
            }
          },
          "400": {
            "description": "Cantidad solicitada no disponible",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Depot" } }
            }
          }
        }
      }
    },
    "/api/depots/{id}/refill": {
      "put": {
        "tags": ["Depots"],
        "summary": "Rellenar depósito",
        "description": "Rellena un depósito a su capacidad máxima",
        "operationId": "refillDepot",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del depósito",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "404": {
            "description": "Depósito no encontrado",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Depot" } }
            }
          },
          "200": {
            "description": "Depósito rellenado exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Depot" }
              }
            }
          }
        }
      }
    },
    "/api/depots/{id}/glp": {
      "put": {
        "tags": ["Depots"],
        "summary": "Actualizar nivel de GLP",
        "description": "Ajusta el nivel de GLP de un depósito (puede ser positivo o negativo)",
        "operationId": "updateGLPLevel_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del depósito",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Cantidad a agregar/restar al nivel actual",
            "required": true,
            "schema": { "type": "number", "format": "double" }
          }
        ],
        "responses": {
          "404": {
            "description": "Depósito no encontrado",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Depot" } }
            }
          },
          "400": {
            "description": "Nivel resultante fuera de los límites permitidos",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Depot" } }
            }
          },
          "200": {
            "description": "Nivel de GLP actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Depot" }
              }
            }
          }
        }
      }
    },
    "/api/vehicles": {
      "get": {
        "tags": ["Vehicles"],
        "summary": "Obtener todos los vehículos",
        "description": "Retorna una lista de todos los vehículos en el sistema",
        "operationId": "getAllVehicles",
        "responses": {
          "200": {
            "description": "Lista de vehículos obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Vehicle" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Vehicles"],
        "summary": "Crear nuevo vehículo",
        "description": "Crea un nuevo vehículo en el sistema",
        "operationId": "createVehicle",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Vehicle" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Vehículo creado exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Vehicle" }
              }
            }
          }
        }
      }
    },
    "/api/orders": {
      "get": {
        "tags": ["Orders"],
        "summary": "Obtener todas las órdenes",
        "description": "Retorna la lista completa de órdenes registradas",
        "operationId": "getAllOrders",
        "responses": {
          "200": {
            "description": "Lista de órdenes obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Order" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Orders"],
        "summary": "Crear nueva orden",
        "description": "Registra una nueva orden en el sistema",
        "operationId": "createOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Order" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Orden creada exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Order" }
              }
            }
          }
        }
      }
    },
    "/api/maintenance": {
      "get": {
        "tags": ["Maintenance"],
        "summary": "Obtener todos los mantenimientos",
        "description": "Retorna la lista completa de mantenimientos registrados",
        "operationId": "getAllMaintenance",
        "responses": {
          "200": {
            "description": "Lista de mantenimientos obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Maintenance" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Maintenance"],
        "summary": "Crear nuevo mantenimiento",
        "description": "Registra un nuevo mantenimiento en el sistema",
        "operationId": "createMaintenance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Maintenance" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Mantenimiento creado exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Maintenance" }
              }
            }
          }
        }
      }
    },
    "/api/maintenance/schedule": {
      "post": {
        "tags": ["Maintenance"],
        "summary": "Programar mantenimiento",
        "description": "Programa un nuevo mantenimiento para un vehículo",
        "operationId": "scheduleMaintenance",
        "parameters": [
          {
            "name": "vehicleId",
            "in": "query",
            "description": "ID del vehículo",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Fecha de inicio (ISO 8601)",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Tipo de mantenimiento",
            "required": true,
            "schema": { "type": "string", "enum": ["PREVENTIVE", "CORRECTIVE"] }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/Maintenance" }
              }
            }
          }
        }
      }
    },
    "/api/incidents": {
      "get": {
        "tags": ["Incidents"],
        "summary": "Obtener todos los incidentes",
        "description": "Retorna la lista completa de incidentes registrados",
        "operationId": "getAllIncidents",
        "responses": {
          "200": {
            "description": "Lista de incidentes obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Incident" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Incidents"],
        "summary": "Crear nuevo incidente",
        "description": "Registra un nuevo incidente en el sistema",
        "operationId": "createIncident",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Incident" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Incidente creado exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Incident" }
              }
            }
          }
        }
      }
    },
    "/api/depots": {
      "get": {
        "tags": ["Depots"],
        "summary": "Obtener todos los depósitos",
        "description": "Retorna la lista completa de depósitos registrados",
        "operationId": "getAllDepots",
        "responses": {
          "200": {
            "description": "Lista de depósitos obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Depot" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Depots"],
        "summary": "Crear nuevo depósito",
        "description": "Registra un nuevo depósito en el sistema",
        "operationId": "createDepot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Depot" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Depósito creado exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Depot" }
              }
            }
          }
        }
      }
    },
    "/api/blockages": {
      "get": {
        "tags": ["Blockages"],
        "summary": "Obtener todos los bloqueos",
        "description": "Retorna la lista completa de bloqueos registrados",
        "operationId": "getAllBlockages",
        "responses": {
          "200": {
            "description": "Lista de bloqueos obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Blockage" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Blockages"],
        "summary": "Crear nuevo bloqueo",
        "description": "Registra un nuevo bloqueo en el sistema",
        "operationId": "createBlockage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Blockage" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Bloqueo creado exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Blockage" }
              }
            }
          }
        }
      }
    },
    "/api/vehicles/{id}": {
      "get": {
        "tags": ["Vehicles"],
        "summary": "Obtener vehículo por ID",
        "description": "Retorna un vehículo específico por su ID",
        "operationId": "getVehicleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del vehículo",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "404": { "description": "Vehículo no encontrado" },
          "200": {
            "description": "Vehículo encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Vehicle" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Vehicles"],
        "summary": "Eliminar vehículo",
        "description": "Elimina un vehículo del sistema",
        "operationId": "deleteVehicle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del vehículo a eliminar",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Vehículo eliminado exitosamente" },
          "404": { "description": "Vehículo no encontrado" }
        }
      }
    },
    "/api/vehicles/type/{type}": {
      "get": {
        "tags": ["Vehicles"],
        "summary": "Obtener vehículos por tipo",
        "description": "Retorna vehículos filtrados por tipo",
        "operationId": "getVehiclesByType",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Tipo de vehículo",
            "required": true,
            "schema": { "type": "string", "enum": ["TA", "TB", "TC", "TD"] }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Vehicle" }
                }
              }
            }
          }
        }
      }
    },
    "/api/vehicles/status/{status}": {
      "get": {
        "tags": ["Vehicles"],
        "summary": "Obtener vehículos por estado",
        "description": "Retorna vehículos filtrados por estado",
        "operationId": "getVehiclesByStatus",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "Estado del vehículo",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AVAILABLE", "IN_TRANSIT", "MAINTENANCE", "BROKEN_DOWN"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Vehicle" }
                }
              }
            }
          }
        }
      }
    },
    "/api/vehicles/radius": {
      "get": {
        "tags": ["Vehicles"],
        "summary": "Obtener vehículos por radio",
        "description": "Retorna vehículos dentro de un radio específico",
        "operationId": "getVehiclesByRadius",
        "parameters": [
          {
            "name": "x",
            "in": "query",
            "description": "Coordenada X del centro",
            "required": true,
            "schema": { "type": "number", "format": "double" }
          },
          {
            "name": "y",
            "in": "query",
            "description": "Coordenada Y del centro",
            "required": true,
            "schema": { "type": "number", "format": "double" }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Radio de búsqueda",
            "required": true,
            "schema": { "type": "number", "format": "double" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Vehicle" }
                }
              }
            }
          }
        }
      }
    },
    "/api/vehicles/fleet/capacity": {
      "get": {
        "tags": ["Vehicles"],
        "summary": "Obtener capacidad total de la flota",
        "description": "Retorna la capacidad total de GLP de todos los vehículos",
        "operationId": "getTotalFleetCapacity",
        "responses": {
          "200": {
            "description": "Capacidad total obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": { "type": "number", "format": "double" }
              }
            }
          }
        }
      }
    },
    "/api/vehicles/fleet/available-glp": {
      "get": {
        "tags": ["Vehicles"],
        "summary": "Obtener GLP disponible en la flota",
        "description": "Retorna el total de GLP disponible en vehículos disponibles",
        "operationId": "getAvailableFleetGLP",
        "responses": {
          "200": {
            "description": "GLP disponible obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": { "type": "number", "format": "double" }
              }
            }
          }
        }
      }
    },
    "/api/vehicles/available": {
      "get": {
        "tags": ["Vehicles"],
        "summary": "Obtener vehículos disponibles",
        "description": "Retorna todos los vehículos disponibles",
        "operationId": "getAvailableVehicles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Vehicle" }
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/{id}": {
      "get": {
        "tags": ["Orders"],
        "summary": "Obtener orden por ID",
        "description": "Retorna una orden específica",
        "operationId": "getOrderById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la orden",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Orden encontrada",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Order" }
              }
            }
          },
          "404": {
            "description": "Orden no encontrada",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Order" } }
            }
          }
        }
      },
      "delete": {
        "tags": ["Orders"],
        "summary": "Eliminar orden",
        "description": "Elimina una orden del sistema",
        "operationId": "deleteOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la orden a eliminar",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Orden eliminada exitosamente" },
          "404": { "description": "Orden no encontrada" }
        }
      }
    },
    "/api/orders/urgent": {
      "get": {
        "tags": ["Orders"],
        "summary": "Obtener órdenes urgentes",
        "description": "Retorna órdenes que deben ser entregadas en las próximas horas",
        "operationId": "getUrgentOrders",
        "parameters": [
          {
            "name": "hoursAhead",
            "in": "query",
            "description": "Horas hacia adelante para considerar urgente",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 4 }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Order" }
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/radius": {
      "get": {
        "tags": ["Orders"],
        "summary": "Obtener órdenes por radio",
        "description": "Retorna órdenes dentro de un radio específico desde una posición",
        "operationId": "getOrdersByRadius",
        "parameters": [
          {
            "name": "x",
            "in": "query",
            "description": "Coordenada X del centro",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "y",
            "in": "query",
            "description": "Coordenada Y del centro",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Radio de búsqueda",
            "required": true,
            "schema": { "type": "number", "format": "double" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Order" }
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/pending": {
      "get": {
        "tags": ["Orders"],
        "summary": "Obtener órdenes pendientes",
        "description": "Retorna todas las órdenes que están pendientes de entrega",
        "operationId": "getPendingOrders",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Order" }
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/overdue": {
      "get": {
        "tags": ["Orders"],
        "summary": "Obtener órdenes vencidas",
        "description": "Retorna todas las órdenes que han superado su fecha límite",
        "operationId": "getOverdueOrders",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Order" }
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/due-by": {
      "get": {
        "tags": ["Orders"],
        "summary": "Obtener órdenes por fecha límite",
        "description": "Retorna órdenes que deben ser entregadas antes de una fecha específica",
        "operationId": "getOrdersByDueTime",
        "parameters": [
          {
            "name": "time",
            "in": "query",
            "description": "Fecha límite (ISO 8601)",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Order" }
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/date-range": {
      "get": {
        "tags": ["Orders"],
        "summary": "Obtener órdenes por rango de fechas",
        "description": "Retorna órdenes en un rango de fechas específico",
        "operationId": "getOrdersByDateRange",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Fecha de inicio (ISO 8601)",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Fecha de fin (ISO 8601)",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Order" }
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/completed": {
      "get": {
        "tags": ["Orders"],
        "summary": "Obtener órdenes completadas",
        "description": "Retorna todas las órdenes que han sido completadas",
        "operationId": "getCompletedOrders",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Order" }
                }
              }
            }
          }
        }
      }
    },
    "/api/maintenance/{id}": {
      "get": {
        "tags": ["Maintenance"],
        "summary": "Obtener mantenimiento por ID",
        "description": "Retorna un mantenimiento específico",
        "operationId": "getMaintenanceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del mantenimiento",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "404": {
            "description": "Mantenimiento no encontrado",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/Maintenance" }
              }
            }
          },
          "200": {
            "description": "Mantenimiento encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Maintenance" }
              }
            }
          }
        }
      }
    },
    "/api/maintenance/vehicle/{vehicleId}": {
      "get": {
        "tags": ["Maintenance"],
        "summary": "Obtener mantenimientos por vehículo",
        "description": "Retorna todos los mantenimientos de un vehículo específico",
        "operationId": "getMaintenanceByVehicle",
        "parameters": [
          {
            "name": "vehicleId",
            "in": "path",
            "description": "ID del vehículo",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Maintenance" }
                }
              }
            }
          }
        }
      }
    },
    "/api/maintenance/upcoming": {
      "get": {
        "tags": ["Maintenance"],
        "summary": "Obtener mantenimientos próximos",
        "description": "Retorna mantenimientos programados en un rango de fechas",
        "operationId": "getUpcomingMaintenance",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Fecha de inicio (ISO 8601)",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Fecha de fin (ISO 8601)",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Maintenance" }
                }
              }
            }
          }
        }
      }
    },
    "/api/maintenance/type/{type}": {
      "get": {
        "tags": ["Maintenance"],
        "summary": "Obtener mantenimientos por tipo",
        "description": "Retorna mantenimientos filtrados por tipo",
        "operationId": "getMaintenanceByType",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Tipo de mantenimiento",
            "required": true,
            "schema": { "type": "string", "enum": ["PREVENTIVE", "CORRECTIVE"] }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Maintenance" }
                }
              }
            }
          }
        }
      }
    },
    "/api/maintenance/active": {
      "get": {
        "tags": ["Maintenance"],
        "summary": "Obtener mantenimientos activos",
        "description": "Retorna todos los mantenimientos actualmente en curso",
        "operationId": "getActiveMaintenance",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Maintenance" }
                }
              }
            }
          }
        }
      }
    },
    "/api/maintenance/active/vehicle/{vehicleId}": {
      "get": {
        "tags": ["Maintenance"],
        "summary": "Obtener mantenimientos activos por vehículo",
        "description": "Retorna mantenimientos activos de un vehículo específico",
        "operationId": "getActiveMaintenanceForVehicle",
        "parameters": [
          {
            "name": "vehicleId",
            "in": "path",
            "description": "ID del vehículo",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Maintenance" }
                }
              }
            }
          }
        }
      }
    },
    "/api/incidents/{id}": {
      "get": {
        "tags": ["Incidents"],
        "summary": "Obtener incidente por ID",
        "description": "Retorna un incidente específico",
        "operationId": "getIncidentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del incidente",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "404": {
            "description": "Incidente no encontrado",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Incident" } }
            }
          },
          "200": {
            "description": "Incidente encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Incident" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Incidents"],
        "summary": "Eliminar incidente",
        "description": "Elimina un incidente del sistema",
        "operationId": "deleteIncident",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del incidente a eliminar",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "404": { "description": "Incidente no encontrado" },
          "200": { "description": "Incidente eliminado exitosamente" }
        }
      }
    },
    "/api/incidents/vehicle/{vehicleId}": {
      "get": {
        "tags": ["Incidents"],
        "summary": "Obtener incidentes por vehículo",
        "description": "Retorna todos los incidentes de un vehículo específico",
        "operationId": "getIncidentsByVehicle",
        "parameters": [
          {
            "name": "vehicleId",
            "in": "path",
            "description": "ID del vehículo",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Incident" }
                }
              }
            }
          }
        }
      }
    },
    "/api/incidents/type/{type}": {
      "get": {
        "tags": ["Incidents"],
        "summary": "Obtener incidentes por tipo",
        "description": "Retorna incidentes filtrados por tipo",
        "operationId": "getIncidentsByType",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Tipo de incidente",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["TYPE_1", "TYPE_2", "TYPE_3"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Incident" }
                }
              }
            }
          }
        }
      }
    },
    "/api/incidents/resolved": {
      "get": {
        "tags": ["Incidents"],
        "summary": "Obtener incidentes resueltos",
        "description": "Retorna todos los incidentes que han sido resueltos",
        "operationId": "getResolvedIncidents",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Incident" }
                }
              }
            }
          }
        }
      }
    },
    "/api/incidents/date-range": {
      "get": {
        "tags": ["Incidents"],
        "summary": "Obtener incidentes por rango de fechas",
        "description": "Retorna incidentes en un rango de fechas específico",
        "operationId": "getIncidentsByDateRange",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Fecha de inicio (ISO 8601)",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Fecha de fin (ISO 8601)",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Incident" }
                }
              }
            }
          }
        }
      }
    },
    "/api/incidents/active": {
      "get": {
        "tags": ["Incidents"],
        "summary": "Obtener incidentes activos",
        "description": "Retorna todos los incidentes actualmente activos (no resueltos)",
        "operationId": "getActiveIncidents",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Incident" }
                }
              }
            }
          }
        }
      }
    },
    "/api/incidents/active/vehicle/{vehicleId}": {
      "get": {
        "tags": ["Incidents"],
        "summary": "Obtener incidentes activos por vehículo",
        "description": "Retorna incidentes activos de un vehículo específico",
        "operationId": "getActiveIncidentsForVehicle",
        "parameters": [
          {
            "name": "vehicleId",
            "in": "path",
            "description": "ID del vehículo",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Incident" }
                }
              }
            }
          }
        }
      }
    },
    "/api/depots/{id}": {
      "get": {
        "tags": ["Depots"],
        "summary": "Obtener depósito por ID",
        "description": "Retorna un depósito específico",
        "operationId": "getDepotById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del depósito",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Depósito encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Depot" }
              }
            }
          },
          "404": {
            "description": "Depósito no encontrado",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Depot" } }
            }
          }
        }
      },
      "delete": {
        "tags": ["Depots"],
        "summary": "Eliminar depósito",
        "description": "Elimina un depósito del sistema",
        "operationId": "deleteDepot",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del depósito a eliminar",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "404": { "description": "Depósito no encontrado" },
          "200": { "description": "Depósito eliminado exitosamente" }
        }
      }
    },
    "/api/depots/sufficient-glp/{requiredGLP}": {
      "get": {
        "tags": ["Depots"],
        "summary": "Obtener depósitos con GLP suficiente",
        "description": "Retorna depósitos que tienen al menos la cantidad requerida de GLP",
        "operationId": "getDepotsWithSufficientGLP",
        "parameters": [
          {
            "name": "requiredGLP",
            "in": "path",
            "description": "Cantidad mínima de GLP requerida",
            "required": true,
            "schema": { "type": "number", "format": "double" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Depot" }
                }
              }
            }
          }
        }
      }
    },
    "/api/depots/radius": {
      "get": {
        "tags": ["Depots"],
        "summary": "Obtener depósitos por radio",
        "description": "Retorna depósitos dentro de un radio específico desde una posición",
        "operationId": "getDepotsByRadius",
        "parameters": [
          {
            "name": "x",
            "in": "query",
            "description": "Coordenada X del centro",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "y",
            "in": "query",
            "description": "Coordenada Y del centro",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Radio de búsqueda",
            "required": true,
            "schema": { "type": "number", "format": "double" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Depot" }
                }
              }
            }
          }
        }
      }
    },
    "/api/depots/location-range": {
      "get": {
        "tags": ["Depots"],
        "summary": "Obtener depósitos por rango de ubicación",
        "description": "Retorna depósitos dentro de un rango geográfico específico",
        "operationId": "getDepotsByLocationRange",
        "parameters": [
          {
            "name": "minX",
            "in": "query",
            "description": "Coordenada X mínima",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "maxX",
            "in": "query",
            "description": "Coordenada X máxima",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "minY",
            "in": "query",
            "description": "Coordenada Y mínima",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "maxY",
            "in": "query",
            "description": "Coordenada Y máxima",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Depot" }
                }
              }
            }
          }
        }
      }
    },
    "/api/depots/glp/current-total": {
      "get": {
        "tags": ["Depots"],
        "summary": "Obtener GLP total actual",
        "description": "Retorna la cantidad total de GLP actualmente almacenada en todos los depósitos",
        "operationId": "getCurrentTotalGLP",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "number", "format": "double" } }
            }
          }
        }
      }
    },
    "/api/depots/capacity/total": {
      "get": {
        "tags": ["Depots"],
        "summary": "Obtener capacidad total de almacenamiento",
        "description": "Retorna la capacidad total de almacenamiento de todos los depósitos",
        "operationId": "getTotalStorageCapacity",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "number", "format": "double" } }
            }
          }
        }
      }
    },
    "/api/depots/available": {
      "get": {
        "tags": ["Depots"],
        "summary": "Obtener depósitos con capacidad disponible",
        "description": "Retorna depósitos que tienen al menos la capacidad libre mínima especificada",
        "operationId": "getDepotsWithAvailableCapacity",
        "parameters": [
          {
            "name": "minCapacity",
            "in": "query",
            "description": "Capacidad mínima libre requerida",
            "required": true,
            "schema": { "type": "number", "format": "double" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Depot" }
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/vehicle-status": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "Obtener estado de vehículos",
        "description": "Devuelve un desglose de vehículos agrupados por su estado operativo",
        "operationId": "getVehicleStatusBreakdown",
        "responses": {
          "200": {
            "description": "Estado de vehículos obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Vehicle" }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/urgent-orders": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "Obtener órdenes urgentes",
        "description": "Devuelve las órdenes que vencen dentro del plazo especificado",
        "operationId": "getUrgentOrders_1",
        "parameters": [
          {
            "name": "hoursAhead",
            "in": "query",
            "description": "Horas de anticipación para considerar urgente",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 4 },
            "example": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Órdenes urgentes obtenidas exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Order" }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/system-health": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "Obtener salud del sistema",
        "description": "Calcula y devuelve puntuaciones de salud del sistema basadas en vehículos, incidentes y órdenes",
        "operationId": "getSystemHealth",
        "responses": {
          "200": {
            "description": "Salud del sistema obtenida exitosamente",
            "content": { "application/json": {} }
          }
        }
      }
    },
    "/api/dashboard/overview": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "Obtener resumen del dashboard",
        "description": "Proporciona estadísticas generales del sistema incluyendo vehículos, órdenes, depósitos y estado operacional",
        "operationId": "getDashboardOverview",
        "responses": {
          "200": {
            "description": "Resumen del dashboard obtenido exitosamente",
            "content": { "application/json": {} }
          }
        }
      }
    },
    "/api/blockages/{id}": {
      "get": {
        "tags": ["Blockages"],
        "summary": "Obtener bloqueo por ID",
        "description": "Retorna un bloqueo específico",
        "operationId": "getBlockageById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del bloqueo",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "Bloqueo encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Blockage" }
              }
            }
          },
          "404": {
            "description": "Bloqueo no encontrado",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Blockage" } }
            }
          }
        }
      },
      "delete": {
        "tags": ["Blockages"],
        "summary": "Eliminar bloqueo",
        "description": "Elimina un bloqueo del sistema",
        "operationId": "deleteBlockage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del bloqueo a eliminar",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": { "description": "Bloqueo eliminado exitosamente" },
          "404": { "description": "Bloqueo no encontrado" }
        }
      }
    },
    "/api/blockages/segment": {
      "get": {
        "tags": ["Blockages"],
        "summary": "Obtener bloqueos en segmento",
        "description": "Retorna bloqueos que afectan un segmento específico de ruta",
        "operationId": "getBlockagesForSegment",
        "parameters": [
          {
            "name": "x1",
            "in": "query",
            "description": "Coordenada X del punto inicial",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "y1",
            "in": "query",
            "description": "Coordenada Y del punto inicial",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "x2",
            "in": "query",
            "description": "Coordenada X del punto final",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "y2",
            "in": "query",
            "description": "Coordenada Y del punto final",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Blockage" }
                }
              }
            }
          }
        }
      }
    },
    "/api/blockages/date-range": {
      "get": {
        "tags": ["Blockages"],
        "summary": "Obtener bloqueos por rango de fechas",
        "description": "Retorna bloqueos en un rango de fechas específico",
        "operationId": "getBlockagesByDateRange",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Fecha de inicio (ISO 8601)",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Fecha de fin (ISO 8601)",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Blockage" }
                }
              }
            }
          }
        }
      }
    },
    "/api/blockages/active": {
      "get": {
        "tags": ["Blockages"],
        "summary": "Obtener bloqueos activos",
        "description": "Retorna todos los bloqueos actualmente activos",
        "operationId": "getActiveBlockages",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Blockage" }
                }
              }
            }
          }
        }
      }
    },
    "/api/blockages/active/{dateTime}": {
      "get": {
        "tags": ["Blockages"],
        "summary": "Obtener bloqueos activos en fecha específica",
        "description": "Retorna bloqueos activos en una fecha y hora específica",
        "operationId": "getActiveBlockagesAt",
        "parameters": [
          {
            "name": "dateTime",
            "in": "path",
            "description": "Fecha y hora para consultar (ISO 8601)",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Blockage" }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Position": {
        "type": "object",
        "properties": {
          "x": { "type": "integer", "format": "int32" },
          "y": { "type": "integer", "format": "int32" }
        }
      },
      "Vehicle": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "type": { "type": "string", "enum": ["TA", "TB", "TC", "TD"] },
          "currentPosition": { "$ref": "#/components/schemas/Position" },
          "status": {
            "type": "string",
            "enum": ["AVAILABLE", "IN_TRANSIT", "MAINTENANCE", "BROKEN_DOWN"]
          },
          "currentCombinedWeightTon": { "type": "number", "format": "double" },
          "currentGlpWeightTon": { "type": "number", "format": "double" },
          "glpCapacity": { "type": "number", "format": "double" },
          "fuelCapacity": { "type": "number", "format": "double" },
          "currentGLP": { "type": "number", "format": "double" },
          "currentFuel": { "type": "number", "format": "double" }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "position": { "$ref": "#/components/schemas/Position" },
          "id": { "type": "string" },
          "arriveDate": { "type": "string", "format": "date-time" },
          "dueDate": { "type": "string", "format": "date-time" },
          "remainingVolume": { "type": "number", "format": "double" },
          "glpRequest": { "type": "number", "format": "double" },
          "deliveryDate": { "type": "string", "format": "date-time" },
          "remainingGLP": { "type": "number", "format": "double" }
        }
      },
      "Maintenance": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "vehicleId": { "type": "string" },
          "startDate": { "type": "string", "format": "date-time" },
          "endDate": { "type": "string", "format": "date-time" },
          "type": { "type": "string", "enum": ["PREVENTIVE", "CORRECTIVE"] },
          "description": { "type": "string" },
          "completed": { "type": "boolean" },
          "scheduledDate": { "type": "string", "format": "date-time" }
        }
      },
      "Depot": {
        "type": "object",
        "properties": {
          "position": { "$ref": "#/components/schemas/Position" },
          "id": { "type": "string" },
          "glpCapacity": { "type": "number", "format": "double" },
          "fuelCapacity": { "type": "number", "format": "double" },
          "currentGLP": { "type": "number", "format": "double" },
          "currentFuel": { "type": "number", "format": "double" },
          "glpMinThreshold": { "type": "number", "format": "double" }
        }
      },
      "Incident": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "vehicleId": { "type": "string" },
          "type": { "type": "string", "enum": ["TYPE_1", "TYPE_2", "TYPE_3"] },
          "occurrenceTime": { "type": "string", "format": "date-time" },
          "resolutionTime": { "type": "string", "format": "date-time" },
          "location": { "$ref": "#/components/schemas/Position" },
          "onSiteImmobilizationDuration": {
            "type": "object",
            "properties": {
              "seconds": { "type": "integer", "format": "int64" },
              "zero": { "type": "boolean" },
              "nano": { "type": "integer", "format": "int32" },
              "negative": { "type": "boolean" },
              "positive": { "type": "boolean" },
              "units": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "durationEstimated": { "type": "boolean" },
                    "duration": {
                      "type": "object",
                      "properties": {
                        "seconds": { "type": "integer", "format": "int64" },
                        "zero": { "type": "boolean" },
                        "nano": { "type": "integer", "format": "int32" },
                        "negative": { "type": "boolean" },
                        "positive": { "type": "boolean" }
                      }
                    },
                    "timeBased": { "type": "boolean" },
                    "dateBased": { "type": "boolean" }
                  }
                }
              }
            }
          },
          "workshopRepairDuration": {
            "type": "object",
            "properties": {
              "seconds": { "type": "integer", "format": "int64" },
              "zero": { "type": "boolean" },
              "nano": { "type": "integer", "format": "int32" },
              "negative": { "type": "boolean" },
              "positive": { "type": "boolean" },
              "units": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "durationEstimated": { "type": "boolean" },
                    "duration": {
                      "type": "object",
                      "properties": {
                        "seconds": { "type": "integer", "format": "int64" },
                        "zero": { "type": "boolean" },
                        "nano": { "type": "integer", "format": "int32" },
                        "negative": { "type": "boolean" },
                        "positive": { "type": "boolean" }
                      }
                    },
                    "timeBased": { "type": "boolean" },
                    "dateBased": { "type": "boolean" }
                  }
                }
              }
            }
          },
          "description": { "type": "string" },
          "resolved": { "type": "boolean" },
          "position": { "$ref": "#/components/schemas/Position" },
          "timestamp": { "type": "string", "format": "date-time" }
        }
      },
      "Blockage": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "startNode": { "$ref": "#/components/schemas/Position" },
          "endNode": { "$ref": "#/components/schemas/Position" },
          "startTime": { "type": "string", "format": "date-time" },
          "endTime": { "type": "string", "format": "date-time" }
        }
      }
    }
  }
}
